import Head from "next/head";
import Navbar from "@/components/shared/navbar/navbar";
import { useEffect, useState } from "react";
import { deleteProj, getAllProj, rebuildProj } from "@/services/projServices";
import { ProjModel } from "@/models/projModel";
import CachedIcon from "@mui/icons-material/Cached";
import RemoveRedEyeIcon from "@mui/icons-material/RemoveRedEye";
import DeleteOutlinedIcon from "@mui/icons-material/DeleteOutlined";
import { useRouter } from "next/router";
import { useSelector } from "react-redux";
import { selectUser } from "@/redux/userSlice";
import jwt from "jsonwebtoken";

function AllProjectRow({ pName, status, framework, pid }: any) {
  const router = useRouter();

  return (
    <tr className="border-b last:border-0">
      <td className="border-r last:border-0 p-2 py-4 font-light text-left capitalize pl-8">
        {pName}
      </td>
      <td className="border-r last:border-0 p-2 text-center font-light">
        {status}
      </td>
      <td className="border-r last:border-0 p-2 text-center font-light">
        {framework}
      </td>
      <td className="w-full flex justify-end border-r last:border-0 p-2 text-right font-light pr-8">
        <button
          className="px-2 hover:bg-slate-800 rounded-md"
          onClick={() => {
            router.push(`/project/${pid}`);
          }}>
          <RemoveRedEyeIcon />
        </button>
        {/*  */}
        <button
          className="px-2 hover:bg-slate-800 rounded-md"
          onClick={() => {
            rebuildProj(router, pid);
          }}>
          <CachedIcon />
        </button>
        {/*  */}
        <button
          className="px-2 text-red-500 hover:bg-slate-800 rounded-md"
          onClick={() => {
            deleteProj(pid);
          }}>
          <DeleteOutlinedIcon />
        </button>
      </td>
    </tr>
  );
}

export default function Home() {
  // var allProjs: ProjModel[];
  const [allProjs, setAllProjs] = useState<ProjModel[]>([]);

  const user = useSelector(selectUser);
  const router = useRouter();

  useEffect(() => {
    if (user && !user.token) {
      router.push("/auth/signup");
    }
  }, [user]);

  useEffect(() => {
    async function asyncc() {
      // allProjs = await getAllProj();
      setAllProjs(await getAllProj());
    }
    asyncc();
  }, []);
  return (
    <>
      <Head>
        <title>Mini Project</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="w-full flex flex-col">
        <Navbar />
        <div className="h-32" />

        {/* dashboard content */}
        <div className="w-full p-3">
          <table className="w-full">
            <colgroup>
              <col span={1} className="w-[25%]" />
              <col span={1} className="w-[25%]" />
              <col span={1} className="w-[25%]" />
              <col span={1} className="w-[25%]" />
            </colgroup>
            <tbody>
              <tr className="border-b">
                <th className="border-r last:border-0 p-2 text-left pl-8">
                  Project Name
                </th>
                <th className="border-r last:border-0 p-2 text-center">
                  Status
                </th>
                <th className="border-r last:border-0 p-2 text-center">
                  Framework
                </th>
                <th className="border-r last:border-0 p-2 text-right pr-8">
                  Actions
                </th>
              </tr>
              {allProjs.map((proj, i) => (
                <AllProjectRow
                  key={i}
                  pName={proj.pname}
                  status={proj.pStatus}
                  framework={proj.frameWork}
                  pid={proj.pid}
                />
              ))}
            </tbody>
          </table>
        </div>
      </main>
    </>
  );
}
